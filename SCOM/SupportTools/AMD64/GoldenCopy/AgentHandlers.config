<?xml version="1.0" encoding="utf-8" ?>
<functions>
  <function match="functionName">
    <name>System.Web.Http.Filters.AuthorizationFilterAttribute.System.Web.Http.Filters.IAuthorizationFilter.ExecuteAuthorizationFilterAsync()</name>
    <aliases>
      <aliasGroup>
        <alias>Web API call : {0}.{1}</alias>
        <param name="Web API Controller" equal=".+">
        </param>
        <param name="Web API Action" equal=".+">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Http.ApiController@&lt;&gt;c__DisplayClass3.&lt;ExecuteAsync&gt;b__0()</name>
    <aliases>
      <aliasGroup>
        <alias>Web API call : {0}.{1}</alias>
        <param name="Web API Controller" equal=".+">
        </param>
        <param name="Web API Action" equal=".+">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Http.ApiController+&lt;&gt;c__DisplayClass3.&lt;ExecuteAsync&gt;b__0()</name>
    <aliases>
      <aliasGroup>
        <alias>Web API call : {0}.{1}</alias>
        <param name="Web API Controller" equal=".+">
        </param>
        <param name="Web API Action" equal=".+">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="interfaceFunction">
    <name>.ExecuteAsync()</name>
    <aliases>
      <aliasGroup>
        <alias>Web API custom call : {0}</alias>
        <param name="Web API Controller" equal=".+">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Http.Controllers.ReflectedHttpActionDescriptor@ActionExecutor.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>Web API action execution</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Http.Controllers.ReflectedHttpActionDescriptor+ActionExecutor.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>Web API action execution</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>.BeginExecute()</name>
    <aliases>
      <aliasGroup>
        <alias>MVC page : {2}.{1}</alias>
        <param name="path" equal=".+">
        </param>
        <param name="MVC Action Name" equal=".+">
        </param>
        <param name="MVC Controller" equal=".+">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>MVC page : {2}.{1}</alias>
        <param name="path" equal=".+">
        </param>
        <param name="MVC Action Name" equal=".+">
        </param>
        <param name="MVC Controller" equal=".+">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="interfaceFunction">
    <name>.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>Server AJAX Request : {0}</alias>
        <param name="path" equal=".+">
        </param>
        <param name="isAjax" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Custom Handler : {0}</alias>
        <param name="path" equal=".+">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>IBM.Data.DB2.DB2Command.ExecuteNonQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>DB2 : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>IBM.Data.DB2.DB2Command.ExecuteReader()</name>
    <aliases>
      <aliasGroup>
        <alias>DB2 : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>IBM.Data.DB2.DB2Command.ExecuteScalar()</name>
    <aliases>
      <aliasGroup>
        <alias>DB2 : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>IBM.Data.DB2.DB2Connection.Close()</name>
    <aliases>
      <aliasGroup>
        <alias>DB2 : Closing connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>DB2 : Closing connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>DB2 : Closing connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>IBM.Data.DB2.DB2Connection.Open()</name>
    <aliases>
      <aliasGroup>
        <alias>DB2 : Opening connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>DB2 : Opening connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>DB2 : Opening connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>IBM.Data.DB2.iSeries.iDB2Command.ExecuteNonQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>DB2 : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>IBM.Data.DB2.iSeries.iDB2Command.ExecuteReader()</name>
    <aliases>
      <aliasGroup>
        <alias>DB2 : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>IBM.Data.DB2.iSeries.iDB2Command.ExecuteScalar()</name>
    <aliases>
      <aliasGroup>
        <alias>DB2 : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>IBM.Data.DB2.iSeries.iDB2Connection.Close()</name>
    <aliases>
      <aliasGroup>
        <alias>DB2 : Closing connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>DB2 : Closing connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>DB2 : Closing connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>IBM.Data.DB2.iSeries.iDB2Connection.Open()</name>
    <aliases>
      <aliasGroup>
        <alias>DB2 : Opening connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>DB2 : Opening connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>DB2 : Opening connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>IBM.Data.Informix.IfxCommand.ExecuteNonQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>Informix : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>IBM.Data.Informix.IfxCommand.ExecuteReader()</name>
    <aliases>
      <aliasGroup>
        <alias> Informix : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>IBM.Data.Informix.IfxCommand.ExecuteScalar()</name>
    <aliases>
      <aliasGroup>
        <alias>Informix : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>IBM.Data.Informix.IfxConnection.Close()</name>
    <aliases>
      <aliasGroup>
        <alias>Informix : Closing connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Informix : Closing connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Informix : Closing connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Informix : Closing connection </alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>IBM.Data.Informix.IfxConnection.Open()</name>
    <aliases>
      <aliasGroup>
        <alias>Informix : Opening connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Informix : Opening connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Informix : Opening connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Informix : Opening connection </alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.AnalysisServices.AdomdClient.AdomdCommand.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>ADOMD : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.AnalysisServices.AdomdClient.AdomdCommand.ExecuteCellSet()</name>
    <aliases>
      <aliasGroup>
        <alias>ADOMD : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.AnalysisServices.AdomdClient.AdomdCommand.ExecuteNonQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>ADOMD : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>Microsoft.AnalysisServices.AdomdClient.AdomdCommand.ExecuteReader()</name>
    <aliases>
      <aliasGroup>
        <alias>ADOMD : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Adapter.FtpAdapter.FtpAsyncTransmitterEndpoint.ProcessMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'FTP Send'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Adapter.FtpAdapter.FtpReceiverEndpoint.DownloadFiles()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'FTP Receive'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Adapter.MqsAdapter.MqsAsyncBatch.DynamicReceive()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'MQSeries Receive'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Adapter.MqsAdapter.MqsAsyncBatch.ProcessDynamicReceive()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'MQSeries Receive'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Adapter.MqsAdapter.MqsAsyncBatch.TransmitMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'MQSeries Send'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Adapter.MqsAdapter.MqsMonitor.FetchBatch()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'MQSeries Fetch Batch'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Adapter.MqsAdapter.MqsMonitor.SubmitMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'MQSeries Receive'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Adapter.SqlReceiver.Task.Start()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'SQL Receive'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Adapter.SqlTransmitter.SqlAsyncBatch.Worker()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'SQL Send'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Adapters.POP3.POP3Endpoint.PerformTask()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'POP3 Receive'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Component.BTFAsmComp.Assemble()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Component: '{0}'</alias>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Component.BtfDasmComp.Disassemble()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Component: '{0}'</alias>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Component.FFAsmComp.Assemble()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Component: '{0}'</alias>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Component.FFDasmComp.Disassemble()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Component: '{0}'</alias>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Component.MIME_SMIME_Decoder.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Stage: '{0}'</alias>
        <param name="stageName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Component.MIME_SMIME_Encoder.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Stage: '{0}'</alias>
        <param name="stageName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Component.PartyRes.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Stage: '{0}'</alias>
        <param name="stageName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Component.XmlAsmComp.Assemble()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Component: '{0}'</alias>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Component.XmlAsmComp.Assemble()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Component: '{0}'</alias>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Component.XmlDasmComp.Disassemble()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Component: '{0}'</alias>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Component.XmlValidator.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Stage: '{0}'</alias>
        <param name="stageName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Component.XmlValidator.Validate()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Stage: '{0}'</alias>
        <param name="stageName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.HttpTransport.HttpAsyncTransmitter.TransmitMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'HTTP Send'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.Internal.EPMTransform.Microsoft.BizTalk.Internal.IBTEPMTransform.TransformMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Map: '{0}'</alias>
        <param name="typeName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.MsmqAdapter.MessageTransmitter.TransmitMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'MSMQ Transmit Message'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.MsmqAdapter.MessageTransmitter.TransmitMessages()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'MSMQ Send'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.MsmqAdapter.MsmqReceiverEndpoint.ProcessWorkItem()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'MSMQ Receive'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.PipelineOM.PipelineManager.Microsoft.BizTalk.PipelineOM.IBTMManagedPipelineManager.ExecutePipeline()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Pipeline: '{0}'</alias>
        <param name="pipelineStrongName" regex="([^,]*)" replacement="$1">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.PipelineOM.ReceivePipeline.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Receive Pipeline: '{0}'</alias>
        <param name="pipelineCode" regex="&lt;FriendlyName&gt;(.*?)&lt;/FriendlyName&gt;" replacement="$1">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.PipelineOM.SendPipeline.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Send Pipeline: '{0}'</alias>
        <param name="pipelineCode" regex="&lt;FriendlyName&gt;(.*?)&lt;/FriendlyName&gt;" replacement="$1">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.PipelineOM.SimpleComponent.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Component: '{0}'</alias>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.PipelineOM.SimpleStage.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Stage: '{0}'</alias>
        <param name="stageName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.SoapTransport.ProcessMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'SOAP Send'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.WebServices.ServerProxy.ServerProxy.Invoke()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Adapter: 'SOAP Receive'</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.XLANGs.BTXEngine.BTXLogicalPortBinding.SendMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Send Message to '{0}'</alias>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase.ReceiveMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Receive Message from '{0}'</alias>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Excel.WebUI.ExcelWebRenderer.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>ExcelWebRenderer : {0} [workbook: {1}, item: {2}]</alias>
        <param name="title">
        </param>
        <param name="workbook" regex="(.*)/(.*)" replacement="$+">
        </param>
        <param name="visibleItem">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Excel.WebUI.InternalEwr.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>InternalEwr : workbook: {0}, item: {1}</alias>
        <param name="workbookUrl" regex="(.*)/(.*)" replacement="$+">
        </param>
        <param name="visibleItem">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Server.ApplicationRegistry.MetadataModel.Entity.ExecuteInternal()</name>
    <aliases>
      <aliasGroup>
        <alias>BDC: Execute '{0}' at '{1}'</alias>
        <param name="methodInstanceName">
        </param>
        <param name="lobSystemInstanceName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Server.ApplicationRegistry.SystemSpecific.Db.DbSystemUtility.ExecuteStatic()</name>
    <aliases>
      <aliasGroup>
        <alias>BDC {0} : Execute '{1}' at '{2}' </alias>
        <param name="dbAccessProvider">
        </param>
        <param name="methodName">
        </param>
        <param name="lobSystemInstanceName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Server.ApplicationRegistry.SystemSpecific.WebService.WebServiceSystemUtility.ExecuteStatic()</name>
    <aliases>
      <aliasGroup>
        <alias>BDC WebService : Execute '{0}' at '{1}' </alias>
        <param name="methodName">
        </param>
        <param name="lobSystemInstanceName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Server.Search.Query.FullTextSqlQuery.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>MOSS Search : "{0}"</alias>
        <param name="queryText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Server.Search.Query.KeywordQuery.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>MOSS Search : "{0}"</alias>
        <param name="queryText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Server.Search.WebControls.SearchPagingWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} : {1}</alias>
        <param name="webPartInfo:">
        </param>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Server.Search.WebControls.SearchPagingWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} : {1}</alias>
        <param name="webPartInfo:">
        </param>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Server.Search.WebControls.SearchStatsWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} : {1}</alias>
        <param name="webPartInfo:">
        </param>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Server.Search.WebControls.SearchStatsWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} : {1}</alias>
        <param name="webPartInfo:">
        </param>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Server.Search.WebControls.SearchSummaryWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} : {1}</alias>
        <param name="webPartInfo:">
        </param>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.Office.Server.Search.WebControls.SearchSummaryWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} : {1}</alias>
        <param name="webPartInfo:">
        </param>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Delivery.ReportContentDelivery.ReportContentDeliveryProvider.Deliver()</name>
    <aliases>
      <aliasGroup>
        <alias>Subscription : {0}</alias>
        <param name="ReportName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.EmailDeliveryProvider.EmailProvider.Deliver()</name>
    <aliases>
      <aliasGroup>
        <alias>Subscription : {0}</alias>
        <param name="ReportName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.FileShareDeliveryProvider.FileShareProvider.Deliver()</name>
    <aliases>
      <aliasGroup>
        <alias>Subscription : {0}</alias>
        <param name="ReportName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Library.CreateReportAction.CreateReport()</name>
    <aliases>
      <aliasGroup>
        <alias>Report : {0}</alias>
        <param name="ReportName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Library.CreateSnapshotExecutor.CreateSnapshot()</name>
    <aliases>
      <aliasGroup>
        <alias>Snapshot : {0}/{1}</alias>
        <param name="ReportFolder" equal=".+">
        </param>
        <param name="ReportName" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Snapshot :</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Library.RenderFirstAsynExecution.RenderFirst()</name>
    <aliases>
      <aliasGroup>
        <alias>Report Processing : {0} for {1} </alias>
        <param name="ReportName">
        </param>
        <param name="UserName">
        </param>
        <param name="UserParameters">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Library.RenderFirstCancelableStep.RenderFirst()</name>
    <aliases>
      <aliasGroup>
        <alias>Report Processing : {0} for {1} </alias>
        <param name="ReportName">
        </param>
        <param name="UserName">
        </param>
        <param name="UserParameters">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Library.RenderNextAsyncExecution.RenderNext()</name>
    <aliases>
      <aliasGroup>
        <alias>Report Processing : {0} for {1} </alias>
        <param name="ReportName">
        </param>
        <param name="UserName">
        </param>
        <param name="UserParameters">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Library.RenderNextCancelableStep.RenderNext()</name>
    <aliases>
      <aliasGroup>
        <alias>Report Processing : {0} for {1} </alias>
        <param name="ReportName">
        </param>
        <param name="UserName">
        </param>
        <param name="UserParameters">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Library.RSService.CancelableCreateSnapshot()</name>
    <aliases>
      <aliasGroup>
        <alias>Report Processing : {0} for {1} </alias>
        <param name="ReportName">
        </param>
        <param name="UserName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Library.RSService.CancelableUpdateSnapshot()</name>
    <aliases>
      <aliasGroup>
        <alias>Report Processing : {0} for {1} </alias>
        <param name="ReportName">
        </param>
        <param name="UserName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Library.RSService.GetReportParametersForRendering()</name>
    <aliases>
      <aliasGroup>
        <alias>Report Parameters : {0} </alias>
        <param name="ReportName" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Report Parameters :</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Library.SetItemDataSourcesAction.SetItemDataSources()</name>
    <aliases>
      <aliasGroup>
        <alias>Report : {0}</alias>
        <param name="ReportName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Library.SubreportRetrieval.GetSubreport()</name>
    <aliases>
      <aliasGroup>
        <alias>Load Subreport : {0}</alias>
        <param name="ReportName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.NullDeliveryProvider.NullProvider.Deliver()</name>
    <aliases>
      <aliasGroup>
        <alias>Subscription : {0}</alias>
        <param name="ReportName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.OnDemandProcessing.SubReportInitializer.InitializeSubReport()</name>
    <aliases>
      <aliasGroup>
        <alias>Render Subreport : {0}</alias>
        <param name="ReportName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.CsvRenderer.CsvRendererBase.Render()</name>
    <aliases>
      <aliasGroup>
        <alias>Csv Report Rendering </alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.DataRenderer.AtomDataReport.InternalRender()</name>
    <aliases>
      <aliasGroup>
        <alias>Atom Report Rendering</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.DataRenderer.CsvReport.InternalRender()</name>
    <aliases>
      <aliasGroup>
        <alias>Csv Report Rendering </alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.DataRenderer.XmlDataReport.RenderData()</name>
    <aliases>
      <aliasGroup>
        <alias>Xml Report Rendering</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.ExcelRenderer.ExcelRenderer.Render()</name>
    <aliases>
      <aliasGroup>
        <alias>Excel Report Rendering</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.HtmlRenderer.RenderingExtensionBase.Render()</name>
    <aliases>
      <aliasGroup>
        <alias>HTML Report Rendering</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.ImageRenderer.ImageRendererBase.Render()</name>
    <aliases>
      <aliasGroup>
        <alias>Image Report Rendering</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.ImageRenderer.PDFRenderer.Render()</name>
    <aliases>
      <aliasGroup>
        <alias>PDF Report Rendering</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.ImageRenderer.Renderer.ProcessPage()</name>
    <aliases>
      <aliasGroup>
        <alias>Image Report Rendering</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.NullRenderer.NullReport.Render()</name>
    <aliases>
      <aliasGroup>
        <alias>Null Report Rendering</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.RPLRendering.RPLRenderer.Render()</name>
    <aliases>
      <aliasGroup>
        <alias>RPL Report Rendering</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.WordRenderer.WordRenderer.Render()</name>
    <aliases>
      <aliasGroup>
        <alias>Word Report Rendering</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.Rendering.XmlDataRenderer.XmlDataReport.Render()</name>
    <aliases>
      <aliasGroup>
        <alias>Xml Report Rendering</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.ReportProcessing.SubReport.UpdateSubReportScopes()</name>
    <aliases>
      <aliasGroup>
        <alias>Subreport : {0}</alias>
        <param name="ReportName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.SharePoint.SharePointDeliveryExtension.DocumentLibraryProvider.DeliverReport()</name>
    <aliases>
      <aliasGroup>
        <alias>Subscription : {0}</alias>
        <param name="ReportName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.ReportingServices.WebServer.ReportServiceHttpHandler.RenderPage()</name>
    <aliases>
      <aliasGroup>
        <alias>Report : {0}</alias>
        <param name="ReportName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Client.ClientContext.ExecuteQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>SharePoint Client call : {0}</alias>
        <param name="Url" equal=".+"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Meetings.CustomToolPaneManager.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>CustomToolPaneManager : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Meetings.PageTabsWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>PageTabsWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.ApplyFiltersWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>ApplyFiltersWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.ApplyFiltersWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>ApplyFiltersWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.BusinessDataActionsWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>BusinessDataActionsWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.BusinessDataDetailsWebPart.CreateChildControls()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} : {1}</alias>
        <param name="webPartInfo:">
        </param>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.BusinessDataItemBuilder.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>BusinessDataItemBuilder : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.BusinessDataListWebPart.CreateChildControls()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} : {1}</alias>
        <param name="webPartInfo:">
        </param>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.BusinessDataWebPart.GetCallbackResult()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} : {1}</alias>
        <param name="webPartInfo:">
        </param>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.ContactFieldControl.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>ContactField : {0}</alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.FilterValuesPickerDialog.OnLoad()</name>
    <aliases>
      <aliasGroup>
        <alias>FilterValuesPickerDialog : {0} </alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.GroupDetailWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>GroupDetailWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.IndicatorWebpart.GetCallbackResult()</name>
    <aliases>
      <aliasGroup>
        <alias>IndicatorWebpart : {0}</alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.IndicatorWebpart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>IndicatorWebpart : {0}</alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.KPIListWebPart.GetCallbackResult()</name>
    <aliases>
      <aliasGroup>
        <alias>KPIListWebPart : {0} [count: {1}]</alias>
        <param name="title">
        </param>
        <param name="itemCount">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.KPIListWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>KPIListWebPart : {0} [count: {1}]</alias>
        <param name="title">
        </param>
        <param name="itemCount">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.KpiRenderer.getKpiData()</name>
    <aliases>
      <aliasGroup>
        <alias>GetKpiData : {0}</alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.PrivacyItemViewer.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>PrivacyItemViewer : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.RelatedGroupsWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>RelatedGroupsWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.SPSlicerChoicesWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>SPSlicerChoicesWebPart : {0}</alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.ThisWeekInPicturesWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>ThisWeekInPicturesWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.ThisWeekInPicturesWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>ThisWeekInPicturesWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.WebPartLoc.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} : {1}</alias>
        <param name="webPartInfo:">
        </param>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.WebPartLoc.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} : {1}</alias>
        <param name="webPartInfo:">
        </param>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Portal.WebControls.WSRPConsumerWebPart.Render()</name>
    <aliases>
      <aliasGroup>
        <alias>WSRPConsumerWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Search.Internal.WebControls.SearchPagingWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>SearchPagingWebPart : {0}</alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Search.Internal.WebControls.SearchPagingWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>SearchPagingWebPart : {0}</alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Search.Internal.WebControls.SearchStatsWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>SearchStatsWebPart : {0}</alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Search.Internal.WebControls.SearchStatsWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>SearchStatsWebPart : {0}</alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Search.Internal.WebControls.SearchSummaryWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>SearchSummaryWebPart : {0}</alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.Search.Internal.WebControls.SearchSummaryWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>SearchSummaryWebPart : {0}</alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebControls.TopologyViewWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>TopologyViewWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.AggregationWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>AggregationWebPart : {0} </alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.BlogAdminWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>BlogAdminWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.ChartViewWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>ChartViewWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.ChartViewWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>ChartViewWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.ContentEditorWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>ContentEditorWebPart : {0}</alias>
        <param name="title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.CustomPropertyToolPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>CustomPropertyToolPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.DataFormWebPart.DataBind()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} : {1}</alias>
        <param name="webPartInfo:">
        </param>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.DataViewWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>DataViewWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.DataViewWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>DataViewWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.ImageWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>ImageWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.ListFormWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>ListFormWebPart : {0} [count: {1}]</alias>
        <param name="title">
        </param>
        <param name="itemCount">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.ListFormWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>ListFormWebPart : {0} [count: {1}]</alias>
        <param name="title">
        </param>
        <param name="itemCount">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.ListViewWebPart.CreateChildControls()</name>
    <aliases>
      <aliasGroup>
        <alias>ListViewWebPart : {0} [count: {1}]</alias>
        <param name="title">
        </param>
        <param name="itemCount">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.ListViewWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>ListViewWebPart : {0} [count: {1}]</alias>
        <param name="title">
        </param>
        <param name="itemCount">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.MembersWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>MembersWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.PageViewerWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>PageViewerWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.SimpleFormWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>SimpleFormWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.SimpleFormWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>SimpleFormWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.SPWebPartManager.LoadWebParts()</name>
    <aliases>
      <aliasGroup>
        <alias>LoadWebParts [count: {0}]</alias>
        <param name="webPartsCount">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.TitleBarWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>TitleBarWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.XmlWebPart.OnPreRender()</name>
    <aliases>
      <aliasGroup>
        <alias>XmlWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.SharePoint.WebPartPages.XmlWebPart.RenderWebPart()</name>
    <aliases>
      <aliasGroup>
        <alias>XmlWebPart : {0}</alias>
        <param name="webPartInfo/title">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.XLANGs.BizTalk.CrossProcess.WorkItem.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Orchestration: '{0}'</alias>
        <param name="context:">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.XLANGs.Core.Events.FireEvent()</name>
    <aliases>
      <aliasGroup>
        <alias>{0} {1}: Shape Name '{2}', Shape type '{3}'</alias>
        <param name="operation" regex="(.*),\s(.*)" replacement="$1">
        </param>
        <param name="operation" regex="(.*),\s(.*)" replacement="$2">
        </param>
        <param name="shapeText">
        </param>
        <param name="shapeType">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.XLANGs.Core.SegmentScheduler.RunASegment()</name>
    <aliases>
      <aliasGroup>
        <alias>Segment Number '{0}'</alias>
        <param name="slotNumber">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.XLANGs.Core.Service.ApplyTransform()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Map: '{0}'</alias>
        <param name="typeName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.XLANGs.Mozart.ShapeInfo.EndShape()</name>
    <aliases>
      <aliasGroup>
        <alias>Shape Duration: '{0}'</alias>
        <param name="duration">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>MS.Internal.Xml.XPath.FunctionQuery.Evaluate()</name>
    <aliases>
      <aliasGroup>
        <alias>BizTalk Transformation: '{0}'</alias>
        <param name="functionName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Oracle.DataAccess.Client.OracleCommand.ExecuteNonQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>Oracle : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>Oracle.DataAccess.Client.OracleCommand.ExecuteReader()</name>
    <aliases>
      <aliasGroup>
        <alias>Oracle : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Oracle.DataAccess.Client.OracleCommand.ExecuteScalar()</name>
    <aliases>
      <aliasGroup>
        <alias>Oracle : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Oracle.DataAccess.Client.OracleConnection.Close()</name>
    <aliases>
      <aliasGroup>
        <alias>Oracle : Closing connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Oracle : Closing connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Oracle : Closing connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Oracle.DataAccess.Client.OracleConnection.Open()</name>
    <aliases>
      <aliasGroup>
        <alias>Oracle : Opening connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Oracle : Opening connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Oracle : Opening connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>Sybase.Data.AseClient.AseCommand.ExecuteNonQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>Sybase : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>Sybase.Data.AseClient.AseCommand.ExecuteScalar()</name>
    <aliases>
      <aliasGroup>
        <alias>Sybase : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>Sybase.Data.AseClient.AseCommand.System.Data.IDbCommand.ExecuteReader()</name>
    <aliases>
      <aliasGroup>
        <alias>Sybase : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>System.Data.Common.DataAdapter.FillFromReader()</name>
    <aliases>
      <aliasGroup>
        <alias>Data load into {0} </alias>
        <param name="srcTable">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.Linq.SqlClient.SqlProvider.System.Data.Linq.Provider.IProvider.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>LINQ : "{0}"</alias>
        <param name="query/cmdText" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>LINQ : "{0}"</alias>
        <param name="cmdText" from="System.Data.SqlClient|SqlCommand|ExecuteReader">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.Odbc.OdbcCommand.ExecuteNonQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>Odbc : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>System.Data.Odbc.OdbcCommand.ExecuteReader()</name>
    <aliases>
      <aliasGroup>
        <alias>Odbc : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.Odbc.OdbcCommand.ExecuteScalar()</name>
    <aliases>
      <aliasGroup>
        <alias>Odbc : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.Odbc.OdbcConnection.Close()</name>
    <aliases>
      <aliasGroup>
        <alias>Odbc : Closing connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Odbc : Closing connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Odbc : Closing connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.Odbc.OdbcConnection.Open()</name>
    <aliases>
      <aliasGroup>
        <alias>Odbc : Opening connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Odbc : Opening connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Odbc : Opening connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.OleDb.OleDbCommand.ExecuteNonQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>OleDb : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>System.Data.OleDb.OleDbCommand.ExecuteReader()</name>
    <aliases>
      <aliasGroup>
        <alias>OleDb : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.OleDb.OleDbCommand.ExecuteScalar()</name>
    <aliases>
      <aliasGroup>
        <alias>OleDb : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.OleDb.OleDbConnection.Close()</name>
    <aliases>
      <aliasGroup>
        <alias>OleDb : Closing connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>OleDb : Closing connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>OleDb : Closing connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.OleDb.OleDbConnection.Open()</name>
    <aliases>
      <aliasGroup>
        <alias>OleDb : Opening connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>OleDb : Opening connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>OleDb : Opening connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.OracleClient.OracleCommand.ExecuteNonQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>Oracle : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>System.Data.OracleClient.OracleCommand.ExecuteReader()</name>
    <aliases>
      <aliasGroup>
        <alias>Oracle : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.OracleClient.OracleCommand.ExecuteScalar()</name>
    <aliases>
      <aliasGroup>
        <alias>Oracle : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.OracleClient.OracleConnection.Close()</name>
    <aliases>
      <aliasGroup>
        <alias>Oracle : Closing connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Oracle : Closing connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Oracle : Closing connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.OracleClient.OracleConnection.Open()</name>
    <aliases>
      <aliasGroup>
        <alias>Oracle : Opening connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Oracle : Opening connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Oracle : Opening connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL Azure Async : {0}</alias>
        <param name="cmdText" />
        <param name="dataSource" equal=".*?.database.windows.net.*" />
      </aliasGroup>
      <aliasGroup>
        <alias>Async SQL : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>System.Data.SqlClient.SqlCommand.BeginExecuteReader()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL Azure Async : {0}</alias>
        <param name="cmdText" />
        <param name="dataSource" equal=".*?.database.windows.net.*" />
      </aliasGroup>
      <aliasGroup>
        <alias>Async SQL : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.SqlClient.SqlCommand.ExecuteNonQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL Azure : {0}</alias>
        <param name="cmdText" />
        <param name="dataSource" equal=".*?.database.windows.net.*" />
      </aliasGroup>
      <aliasGroup>
        <alias>SQL : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName" hide="false">
    <name>System.Data.SqlClient.SqlCommand.ExecuteReader()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL Azure : {0}</alias>
        <param name="cmdText" />
        <param name="dataSource" equal=".*?.database.windows.net.*" />
      </aliasGroup>
      <aliasGroup>
        <alias>SQL : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.SqlClient.SqlCommand.ExecuteScalar()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL Azure : {0}</alias>
        <param name="cmdText" />
        <param name="dataSource" equal=".*?.database.windows.net.*" />
      </aliasGroup>
      <aliasGroup>
        <alias>SQL : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.SqlClient.SqlCommand.ExecuteXmlReader()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL Azure : {0}</alias>
        <param name="cmdText" />
        <param name="dataSource" equal=".*?.database.windows.net.*" />
      </aliasGroup>
      <aliasGroup>
        <alias>SQL : {0} </alias>
        <param name="cmdText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.SqlClient.SqlConnection.Close()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL Azure : Closing connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database" />
        <param name="DataSource" equal=".*?.database.windows.net.*" />
      </aliasGroup>
      <aliasGroup>
        <alias>SQL : Closing connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL : Closing connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL : Closing connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.SqlClient.SqlConnection.Open()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL Azure : Opening connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database" />
        <param name="DataSource" equal=".*?.database.windows.net.*" />
      </aliasGroup>
      <aliasGroup>
        <alias>SQL : Opening connection to the database '{0}' on the server '{1}'</alias>
        <param name="Database">
        </param>
        <param name="DataSource">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL : Opening connection to the database '{0}'</alias>
        <param name="Database">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL : Opening connection to the server '{0}'</alias>
        <param name="DataSource">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.EnterpriseServices.RemoteServicedComponentProxy.Invoke()</name>
    <aliases>
      <aliasGroup>
        <alias>COM+ : {0}.{1} (). Client side</alias>
        <param name="objectType" regex="([^,]*)" replacement="$1">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.EnterpriseServices.ServicedComponentProxy.LocalInvoke()</name>
    <aliases>
      <aliasGroup>
        <alias>COM+ method : {0}.{1} (). Server side</alias>
        <param name="objectType" regex="([^,]*)" replacement="$1">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Runtime.Remoting.Channels.ChannelServices.DispatchMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>Remoting method : {0}.{1} (). Server side</alias>
        <param name="msg/objectType" regex="([^clr:][^,]*)" replacement="$1">
        </param>
        <param name="msg/methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.EnterpriseServices.ServicedComponent.RemoteDispatchHelper()</name>
    <aliases>
      <aliasGroup>
        <alias>COM+ : {0}.{1} (). Server side</alias>
        <param name="objectType" regex="([^clr:][^,]*)" replacement="$1" from="System.EnterpriseServices|ServicedComponentProxy|LocalInvoke">
        </param>
        <param name="methodName" from="System.EnterpriseServices|ServicedComponentProxy|LocalInvoke">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Runtime.Remoting.Messaging.ServerObjectTerminatorSink.AsyncProcessMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>Remoting method : {0}.{1} (). Server side</alias>
        <param name="objectType" regex="([^clr:][^,]*)" replacement="$1">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Runtime.Remoting.Messaging.ServerObjectTerminatorSink.SyncProcessMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>Remoting method : {0}.{1} (). Server side</alias>
        <param name="objectType" regex="([^clr:][^,]*)" replacement="$1">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Runtime.Remoting.Messaging.StackBuilderSink.AsyncProcessMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>Async call : {0}.{1} ()</alias>
        <param name="objectType" regex="([^,]*)" replacement="$1">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>Remoting method : {0}.{1} (). Client side</alias>
        <param name="reqMsg/objectType" regex="([^,]*)" replacement="$1">
        </param>
        <param name="reqMsg/methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Runtime.Remoting.Proxies.RemotingProxy.InternalInvoke()</name>
    <aliases>
      <aliasGroup>
        <alias>Remoting method : {0}.{1} (). Client side</alias>
        <param name="objectType" regex="([^,]*)" replacement="$1">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.ServiceModel.Channels.ServiceChannelProxy.InvokeBeginService()</name>
    <aliases>
      <aliasGroup>
        <alias>WCF : {0}.{1} (). Client side</alias>
        <param name="objectType" regex="([^clr:][^,]*)" replacement="$1">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.ServiceModel.Channels.ServiceChannelProxy.InvokeEndService()</name>
    <aliases>
      <aliasGroup>
        <alias>WCF : {0}.{1} (). Client side</alias>
        <param name="objectType" regex="([^clr:][^,]*)" replacement="$1">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.ServiceModel.Channels.ServiceChannelProxy.InvokeService()</name>
    <aliases>      
      <aliasGroup>
        <alias>WCF : {0}.{1} (). Client side</alias>
        <param name="objectType" regex="([^clr:][^,]*)" replacement="$1">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.ServiceModel.Dispatcher.AsyncMethodInvoker.InvokeBegin()</name>
    <aliases>
      <aliasGroup>
        <alias>WCF : {0}.{1} (). Server side</alias>
        <param name="className" regex="DynamicModule.ns.Wrapped_(.*)_.*" replacement="$1">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>WCF : {0}.{1} (). Server side</alias>
        <param name="className">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.ServiceModel.Dispatcher.AsyncMethodInvoker.InvokeEnd()</name>
    <aliases>
      <aliasGroup>
        <alias>WCF : {0}.{1} (). Server side</alias>
        <param name="className" regex="DynamicModule.ns.Wrapped_(.*)_.*" replacement="$1">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>WCF : {0}.{1} (). Server side</alias>
        <param name="className">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke()</name>
    <aliases>
      <aliasGroup>
        <alias>WCF : {0}.{1} (). Server side</alias>
        <param name="className" regex="DynamicModule.ns.Wrapped_(.*)_.*" replacement="$1">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>WCF : {0}.{1} (). Server side</alias>
        <param name="className">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Caching.OutputCacheModule.OnEnter()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : OutputCacheModule.OnEnter</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Caching.OutputCacheModule.OnLeave()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : OutputCacheModule.OnLeave</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.DefaultHttpHandler.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Handler : DefaultHttpHandler</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Handlers.AssemblyResourceLoader.System.Web.IHttpHandler.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Handler : AssemblyResourceLoader</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Handlers.BatchHandler.System.Web.IHttpHandler.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Handler : BatchHandler</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Handlers.TraceHandler.System.Web.IHttpHandler.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Handler : TraceHandler</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>Server AJAX Request : {0}</alias>
        <param name="path">
        </param>
        <param name="Content-Type" regex="^(.*/)?json(;.*)?$" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Server AJAX Request : {0}, action = {2}.{3}</alias>
        <param name="path">
        </param>
        <param name="isAjax" from="System.Web.UI|Page|ProcessRequest" equal=".+">
        </param>
        <param name="ajaxTypeName" from="System.Web.UI|Page|ProcessRequest" equal=".+">
        </param>
        <param name="ajaxActionName" from="System.Web.UI|Page|ProcessRequest" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Server AJAX Request : {0}, action = {2}</alias>
        <param name="path">
        </param>
        <param name="isAjax" from="System.Web.UI|Page|ProcessRequest" equal=".+">
        </param>
        <param name="ajaxTypeName" from="System.Web.UI|Page|ProcessRequest" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Server AJAX Request : {0}</alias>
        <param name="path" equal=".+">
        </param>
        <param name="isAjax" from="System.Web.UI|Page|ProcessRequest" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Server AJAX Request : {0}</alias>
        <param name="path" equal=".+">
        </param>
        <param name="isAjax" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Request : {0}</alias>
        <param name="path" equal=".+">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.HttpDebugHandler.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Handler : HttpDebugHandler</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.HttpForbiddenHandler.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Handler : HttpForbiddenHandler</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.HttpMethodNotAllowedHandler.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Handler : HttpMethodNotAllowedHandler</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.HttpNotFoundHandler.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Handler : HttpNotFoundHandler</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.HttpNotImplementedHandler.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Handler : HttpNotImplementedHandler</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.BeginExecute()</name>
    <aliases>
      <aliasGroup>
        <alias>Async Action Execution: {0}.{1}</alias>
        <param name="MVC Controller">
        </param>
        <param name="MVC Action Name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Mvc.AsyncController.BeginExecute()</name>
    <aliases>
      <aliasGroup>
        <alias>Async MVC page : {0}.{1}</alias>
        <param name="MVC Controller">
        </param>
        <param name="MVC Action Name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Mvc.ControllerBase.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>MVC page : {2}.{1}</alias>
        <param name="path" equal=".+">
        </param>
        <param name="MVC Action Name" equal=".+">
        </param>
        <param name="MVC Controller" equal=".+">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod()</name>
    <aliases>
      <aliasGroup>
        <alias>MVC page : {2}.{1}</alias>
        <param name="path" equal=".+">
        </param>
        <param name="MVC Action Name" equal=".+">
        </param>
        <param name="MVC Controller" equal=".+">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Mvc.ReflectedActionDescriptor.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>Action Execution: {0}.{1}</alias>
        <param name="MVC Controller">
        </param>
        <param name="MVC Action Name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Mvc.ViewResultBase.ExecuteResult()</name>
    <aliases>
      <aliasGroup>
        <alias>MVC View rendering: {0}</alias>
        <param name="viewName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Profile.ProfileModule.OnEnter()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : ProfileModule.OnEnter</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Profile.ProfileModule.OnLeave()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : ProfileModule.OnLeave</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Script.Services.RestHandler.ExecuteWebServiceCall()</name>
    <aliases>
      <aliasGroup>
        <alias>Server AJAX Request : {0}, action = {1}</alias>
        <param name="path" equal=".+">
        </param>
        <param name="methodName" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Server AJAX Request : {0}</alias>
        <param name="path" equal=".+" />
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Security.AnonymousIdentificationModule.OnEnter()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : AnonymousIdentificationModule.OnEnter</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Security.DefaultAuthenticationModule.OnEnter()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : DefaultAuthenticationModule.OnEnter</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Security.FileAuthorizationModule.OnEnter()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : FileAuthorizationModule.OnEnter</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Security.FormsAuthenticationModule.OnAuthenticate()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : FormsAuthenticationModule.OnAuthenticate</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Security.PassportAuthenticationModule.OnAuthenticate()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : PassportAuthenticationModule.OnAuthenticate</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Security.RoleManagerModule.OnEnter()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : RoleManagerModule.OnEnter</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Security.UrlAuthorizationModule.OnEnter()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : UrlAuthorizationModule.OnEnter</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Security.WindowsAuthenticationModule.OnAuthenticate()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : WindowsAuthenticationModule.OnAuthenticate</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Services.Protocols.LogicalMethodInfo.Invoke()</name>
    <aliases>
      <aliasGroup>
        <alias>MOSS Excel Service : {0}.{1} (). Server side</alias>
        <param name="path" equal=".*/ExcelCalculationServer/ExcelService.asmx">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>MOSS Search Service : '{0}'</alias>
        <param name="parameters/0" regex="(?&lt;=&lt;QueryText.*?&gt;)(.*?)(?=&lt;/QueryText&gt;)" replacement="$1">
        </param>
        <param name="path" equal=".*/_vti_bin/search.asmx">
        </param>
        <param name="methodName" equal="Query">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>MOSS Search Service : '{0}'</alias>
        <param name="parameters/0" regex="(?&lt;=&lt;QueryText.*?&gt;)(.*?)(?=&lt;/QueryText&gt;)" replacement="$1">
        </param>
        <param name="path" equal=".*/_vti_bin/search.asmx">
        </param>
        <param name="methodName" equal="QueryEx">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>MOSS Search Service : {0}.{1}(). Server Side</alias>
        <param name="path" equal=".*/_vti_bin/search.asmx">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Web service : {0}.{1} (). Server side</alias>
        <param name="path">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke()</name>
    <aliases>
      <aliasGroup>
        <alias>MOSS Excel service : {0}.{1} (). Client side</alias>
        <param name="absoluteUri" equal=".*/ExcelCalculationServer/ExcelService.asmx">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>MOSS Search Service : '{0}'</alias>
        <param name="parameters/0" regex="(?&lt;=&lt;QueryText.*?&gt;)(.*?)(?=&lt;/QueryText&gt;)" replacement="$1">
        </param>
        <param name="absoluteUri" equal=".*/_vti_bin/search.asmx">
        </param>
        <param name="methodName" equal="Query">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>MOSS Search Service : '{0}'</alias>
        <param name="parameters/0" regex="(?&lt;=&lt;QueryText.*?&gt;)(.*?)(?=&lt;/QueryText&gt;)" replacement="$1">
        </param>
        <param name="absoluteUri" equal=".*/_vti_bin/search.asmx">
        </param>
        <param name="methodName" equal="QueryEx">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>MOSS Search Service : {0}.{1}(). Client Side</alias>
        <param name="absoluteUri" equal=".*/_vti_bin/search.asmx">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Web service : {0}.{1} (). Client side</alias>
        <param name="absoluteUri">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke()</name>
    <aliases>
      <aliasGroup>
        <alias>MOSS Excel service : {0}.{1} (). Client side</alias>
        <param name="absoluteUri" equal=".*/ExcelCalculationServer/ExcelService.asmx">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>MOSS Search Service : '{0}'</alias>
        <param name="parameters/0" regex="(?&lt;=&lt;QueryText.*?&gt;)(.*?)(?=&lt;/QueryText&gt;)" replacement="$1">
        </param>
        <param name="absoluteUri" equal=".*/_vti_bin/search.asmx">
        </param>
        <param name="methodName" equal="Query">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>MOSS Search Service : '{0}'</alias>
        <param name="parameters/0" regex="(?&lt;=&lt;QueryText.*?&gt;)(.*?)(?=&lt;/QueryText&gt;)" replacement="$1">
        </param>
        <param name="absoluteUri" equal=".*/_vti_bin/search.asmx">
        </param>
        <param name="methodName" equal="QueryEx">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>MOSS Search Service : {0}.{1}(). Client Side</alias>
        <param name="absoluteUri" equal=".*/_vti_bin/search.asmx">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Web service : {0}.{1} (). Client side</alias>
        <param name="absoluteUri">
        </param>
        <param name="methodName">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.SessionState.SessionStateModule.BeginAcquireState()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : SessionStateModule.BeginAcquireState</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.SessionState.StateApplication.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Handler : StateApplication</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.StaticFileHandler.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Handler : StaticFileHandler</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.UI.Page.AsyncPageBeginProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>Async ASP page : {0}</alias>
        <param name="path">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.UI.Page.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>Server AJAX page : {0}, action = {2}.{3}</alias>
        <param name="path">
        </param>
        <param name="isAjax" equal=".+">
        </param>
        <param name="ajaxTypeName" equal=".+">
        </param>
        <param name="ajaxActionName" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Server AJAX page : {0}, action = {2}</alias>
        <param name="path">
        </param>
        <param name="isAjax" equal=".+">
        </param>
        <param name="ajaxTypeName" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>Server AJAX page : {0}</alias>
        <param name="path">
        </param>
        <param name="isAjax" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>SharePoint Site : {0}, ASP page : {1}</alias>
        <param name="SharePointProperties/title" equal=".+">
        </param>
        <param name="path">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>ASP page : {0}</alias>
        <param name="path" equal=".+">
        </param>
      </aliasGroup>
      <aliasGroup>
        <alias>ASP page : {0}</alias>
        <param name="path/_virtualPath">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.UI.TrivialPage.ProcessRequest()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Handler : TrivialPage</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Web.UrlMappingsModule.OnEnter()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP Module : UrlMappingsModule.OnEnter</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Windows.Forms.Control.OnClick()</name>
    <aliases>
      <aliasGroup>
        <alias>Windows form : "{0}" on control "{1}" click</alias>
        <param name="userWindowText">
        </param>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Windows.Forms.Control.WndProc()</name>
    <aliases>
      <aliasGroup>
        <alias>Windows form : "{0} {1} WndProc"</alias>
        <param name="userWindowText">
        </param>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Windows.Forms.Form.OnLoad()</name>
    <aliases>
      <aliasGroup>
        <alias>Windows form : "{0}" on load</alias>
        <param name="userWindowText">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Windows.Forms.MenuItem.OnClick()</name>
    <aliases>
      <aliasGroup>
        <alias>Windows form : "{0}" on menu "{1}" click</alias>
        <param name="userWindowText">
        </param>
        <param name="caption">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Windows.Forms.ToolBar.OnButtonClick()</name>
    <aliases>
      <aliasGroup>
        <alias>Windows form : "{0}" on toolbar button click</alias>
        <param name="userWindowText">
        </param>
        <param name="name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Workflow.ComponentModel.Activity.SetStatus()</name>
    <aliases>
      <aliasGroup>
        <alias>Activity {0} change status to {1}</alias>
        <param name="Name">
        </param>
        <param name="NewExecutionStatus">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity()</name>
    <aliases>
      <aliasGroup>
        <alias>Schedule activity {0}</alias>
        <param name="Name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Workflow.ComponentModel.ActivityExecutor`1.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>Activity {0} execution</alias>
        <param name="Name">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Workflow.ComponentModel.ActivityExecutorDelegateInfo`1@ActivityExecutorDelegateOperation.Run()</name>
    <aliases>
      <aliasGroup>
        <alias>Delegate {0} call</alias>
        <param name="Method">
        </param>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Workflow.Runtime.WorkflowExecutor.RunScheduler()</name>
    <aliases>
      <aliasGroup>
        <alias>Scheduler process item {0} </alias>
        <param name="Schedulable Item">
        </param>
      </aliasGroup>
    </aliases>
  </function>

  <!--Azure Queues calls-->
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.AddMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Add message to the queue '{0}'</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.UpdateMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Update message in the queue '{0}'</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.Clear()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Clear the queue '{0}'</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.Create()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Create the queue '{0}'</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.CreateIfNotExist()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Create the queue '{0}'</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.Delete()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Delete the queue '{0}'</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.DeleteMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Delete message from the queue '{0}'</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function> 
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.Exists()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Check queue '{0}'</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.GetMessagesInternal()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Get messages from the queue '{0}'</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.SetMetadata()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Set metadata to the queue '{0}'</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.FetchAttributes()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Fetch queue '{0}' attributes</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.PeekMessage()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Peek messages from the queue '{0}'</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueue.PeekMessages()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Peek messages from the queue '{0}'</alias>
        <param name="queueName"/>
      </aliasGroup>
    </aliases>
  </function>

  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudQueueClient.ListQueuesSegmented()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: List queues</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudTableClient.ListTablesSegmented()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: List tables</alias>
      </aliasGroup>
    </aliases>
  </function>

  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudTableClient.CreateTablesFromModel()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Create tables</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudTableClient.CreateTable()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Create the table '{0}'</alias>
        <param name="tableName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudTableClient.CreateTableIfNotExist()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Create the table '{0}'</alias>
        <param name="tableName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudTableClient.DeleteTable()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Delete the table '{0}'</alias>
        <param name="tableName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudTableClient.DeleteTableIfExist()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Delete the table '{0}'</alias>
        <param name="tableName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudTableClient.DoesTableExist()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Ensure table exists '{0}'</alias>
        <param name="tableName"/>
      </aliasGroup>
    </aliases>
  </function>

  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.BlobReadStream.Read()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Read the blob stream for the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.BlobWriteStream.Write()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Write to the blob stream for the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.BlobWriteStream.Commit()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Commit the blob stream for the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  
  
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudBlobContainer.Create()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Create blob container '{0}'</alias>
        <param name="containerName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudBlobContainer.Delete()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Delete blob container '{0}'</alias>
        <param name="containerName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudBlobContainer.CreateIfNotExist()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Create blob container '{0}'</alias>
        <param name="containerName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudBlobContainer.SetPermissions()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Set permissions to the blob container '{0}'</alias>
        <param name="containerName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudBlobContainer.GetPermissions()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Get permissions for the blob container '{0}'</alias>
        <param name="containerName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudBlobContainer.FetchAttributes()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Fetch attributes from the blob container '{0}'</alias>
        <param name="containerName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudBlobContainer.SetMetadata()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Set metadata to the blob container '{0}'</alias>
        <param name="containerName"/>
      </aliasGroup>
    </aliases>
  </function>

  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudBlobContainer.ListBlobsSegmented()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: List blobs from the container '{0}'</alias>
        <param name="containerName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudBlobDirectory.ListBlobsSegmented()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: List blobs from the container '{0}'</alias>
        <param name="containerName"/>
      </aliasGroup>
    </aliases>
  </function>

  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudBlob.CopyFromBlob()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Copy the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlob.CreateSnapshot()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Create snapshot of the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlob.Delete()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Delete the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlob.DeleteIfExists()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Delete the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlob.UploadFromStream()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Upload blob from the stream '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlob.DownloadToStream()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Download blob to the stream '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlob.UploadText()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Upload text to the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlob.DownloadText()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Download text from the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlob.SetProperties()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Set properties for the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlob.UploadFile()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Upload file to the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlob.DownloadToFile()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Download blob to the file '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlob.GetSharedAccessSignature()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Get shared access signature for the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlockBlob.PutBlock()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Put block into the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlockBlob.PutBlockList()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Put block list into the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudBlockBlob.DownloadBlockList()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Download block list from the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudPageBlob.WritePages()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Write pages to the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudPageBlob.Create()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Create the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudPageBlob.ClearPages()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Clear pages from the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName"><name>Microsoft.WindowsAzure.StorageClient.CloudPageBlob.GetPageRanges()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Get page range sfor the blob '{0}'</alias>
        <param name="blobName"/>
      </aliasGroup>
    </aliases>
  </function>


  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudBlobClient.ListBlobsWithPrefixSegmented()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: List blobs</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.CloudBlobClient.ListContainersSegmented()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: List blob containers</alias>
      </aliasGroup>
    </aliases>
  </function>

  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.Tasks.Task`1.ExecuteAndWait()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: List blobs from the container '{0}'</alias>
        <param name="containerName" equal=".+"/>
        <param name="objectType" equal="Microsoft.WindowsAzure.StorageClient.IListBlobItem"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Azure Storage: List blobs</alias>        
        <param name="objectType" equal="Microsoft.WindowsAzure.StorageClient.IListBlobItem"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Azure Storage: List queues</alias>
        <param name="objectType" equal="Microsoft.WindowsAzure.StorageClient.CloudQueue"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Azure Storage: List blob containers</alias>
        <param name="objectType" equal="Microsoft.WindowsAzure.StorageClient.CloudBlobContainer"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Azure Storage: List tables</alias>
        <param name="parentType" equal="Microsoft.WindowsAzure.StorageClient.CloudTableClient"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Azure Storage: Execute table query '{0}'</alias>
        <param name="requestUri" equal=".+"/>
      </aliasGroup>
    </aliases>
  </function>

  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.Tasks.Task`1[T].ExecuteAndWait()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: List blobs from the container '{0}'</alias>
        <param name="containerName" equal=".+"/>
        <param name="objectType" equal="Microsoft.WindowsAzure.StorageClient.IListBlobItem"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Azure Storage: List blobs</alias>
        <param name="objectType" equal="Microsoft.WindowsAzure.StorageClient.IListBlobItem"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Azure Storage: List queues</alias>
        <param name="objectType" equal="Microsoft.WindowsAzure.StorageClient.CloudQueue"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Azure Storage: List blob containers</alias>
        <param name="objectType" equal="Microsoft.WindowsAzure.StorageClient.CloudBlobContainer"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Azure Storage: List tables</alias>
        <param name="parentType" equal="Microsoft.WindowsAzure.StorageClient.CloudTableClient"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Azure Storage: Execute table query '{0}'</alias>
        <param name="requestUri" equal=".+"/>
      </aliasGroup>
    </aliases>
  </function>

  <function match="functionName">
    <name>System.Data.Services.Client.DataServiceContext.SaveChanges()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Save changes for azure tables</alias>
        <param name="dataServiceContext" equal="Microsoft.WindowsAzure.StorageClient.TableServiceContext"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Data Service REST: Save changes</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>Microsoft.WindowsAzure.StorageClient.TableServiceContext.SaveChangesWithRetries()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Save changes for azure tables</alias>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.Services.Client.DataServiceContext.Execute()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Execute table query '{0}'</alias>
        <param name="requestUri"/>
        <param name="dataServiceContext" equal="Microsoft.WindowsAzure.StorageClient.TableServiceContext"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Data Service REST: Execute query '{0}'</alias>
        <param name="requestUri"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>System.Data.Services.Client.DataServiceContext.ExecuteBatch()</name>
    <aliases>
      <aliasGroup>
        <alias>Azure Storage: Execute table queries '{0}'...</alias>
        <param name="parameters/requestUri[0]/absoluteUri"/>
        <param name="dataServiceContext" equal="Microsoft.WindowsAzure.StorageClient.TableServiceContext"/>
      </aliasGroup>
      <aliasGroup>
        <alias>Data Service REST: Execute queries '{0}'...</alias>
        <param name="parameters/requestUri[0]/absoluteUri"/>
      </aliasGroup>
    </aliases>
  </function>
  <!-- Java section -->
  <function match="functionName">
    <name>javax/servlet/http.HttpServlet.service()</name>
    <aliases>
      <aliasGroup>
        <alias>HTTP servlet: {0}</alias>
        <param name="objectURI" regex="(.*)\?.*" replacement="$1"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>org/apache/struts2/dispatcher.Dispatcher.serviceAction()</name>
    <aliases>
      <aliasGroup>
        <alias>Struts2 call: {0}</alias>
        <param name="objectURI" regex="(.*)\?.*" replacement="$1"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>org/apache/axis2/engine.AxisEngine.receive</name>
    <aliases>
      <aliasGroup>
        <alias>Axis2 service call: {0}.{1}()</alias>
        <param name="endpointName"/>
        <param name="methodName"/>
      </aliasGroup>
    </aliases>
  </function>

  <function match="functionName">
    <name>com/microsoft/sqlserver/jdbc.SQLServerConnection.rollback()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL: Rollback transaction to catalog '{0}'</alias>
        <param name="catalog"/>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL Azure: Rollback transaction to catalog '{0}'</alias>
        <param name="catalog" />
        <param name="connectionURL" equal=".*?.database.windows.net.*" />
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/microsoft/sqlserver/jdbc.SQLServerConnection.commit()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL: Commit transaction to catalog '{0}'</alias>
        <param name="catalog"/>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL Azure: Commit transaction to catalog '{0}'</alias>
        <param name="catalog" />
        <param name="connectionURL" equal=".*?.database.windows.net.*" />
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/microsoft/sqlserver/jdbc.SQLServerStatement.executeBatch()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL: Execute batch on catalog '{0}'</alias>
        <param name="catalog"/>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL Azure: Execute batch on catalog '{0}'</alias>
        <param name="catalog" />
        <param name="connectionURL" equal=".*?.database.windows.net.*" />
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/microsoft/sqlserver/jdbc.SQLServerStatement.execute()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL: {0}</alias>
        <param name="cmdText"/>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL Azure: {0}</alias>
        <param name="cmdText" />
        <param name="connectionURL" equal=".*?.database.windows.net.*" />
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/microsoft/sqlserver/jdbc.SQLServerStatement.executeUpdate()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL: {0}</alias>
        <param name="cmdText"/>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL Azure: {0}</alias>
        <param name="cmdText" />
        <param name="connectionURL" equal=".*?.database.windows.net.*" />
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/microsoft/sqlserver/jdbc.SQLServerStatement.executeQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL: {0}</alias>
        <param name="cmdText"/>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL Azure: {0}</alias>
        <param name="cmdText" />
        <param name="connectionURL" equal=".*?.database.windows.net.*" />
      </aliasGroup>
    </aliases>
  </function>


  <function match="functionName">
    <name>com/microsoft/sqlserver/jdbc.SQLServerPreparedStatement.executeBatch()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL: Execute batch on catalog '{0}'</alias>
        <param name="catalog"/>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL Azure: Execute batch on catalog '{0}'</alias>
        <param name="catalog" />
        <param name="connectionURL" equal=".*?.database.windows.net.*" />
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/microsoft/sqlserver/jdbc.SQLServerPreparedStatement.execute()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL: Execute on catalog '{0}'</alias>
        <param name="catalog"/>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL Azure: Execute on catalog '{0}'</alias>
        <param name="catalog" />
        <param name="connectionURL" equal=".*?.database.windows.net.*" />
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/microsoft/sqlserver/jdbc.SQLServerPreparedStatement.executeUpdate()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL: Execute on catalog '{0}'</alias>
        <param name="catalog"/>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL Azure: Execute on catalog '{0}'</alias>
        <param name="catalog" />
        <param name="connectionURL" equal=".*?.database.windows.net.*" />
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/microsoft/sqlserver/jdbc.SQLServerPreparedStatement.executeQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>SQL: Execute on catalog '{0}'</alias>
        <param name="catalog"/>
      </aliasGroup>
      <aliasGroup>
        <alias>SQL Azure: Execute on catalog '{0}'</alias>
        <param name="catalog" />
        <param name="connectionURL" equal=".*?.database.windows.net.*" />
      </aliasGroup>
    </aliases>
  </function>

  <function match="functionName">
    <name>com/mysql/jdbc.StatementImpl.execute()</name>
    <aliases>
      <aliasGroup>
        <alias>MySQL: {0}</alias>
        <param name="cmdText"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/mysql/jdbc.StatementImpl.executeQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>MySQL: {0}</alias>
        <param name="cmdText"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/mysql/jdbc.StatementImpl.executeUpdate()</name>
    <aliases>
      <aliasGroup>
        <alias>MySQL: {0}</alias>
        <param name="cmdText"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/mysql/jdbc.PreparedStatement.execute()</name>
    <aliases>
      <aliasGroup>
        <alias>MySQL: {0}</alias>
        <param name="cmdText"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/mysql/jdbc.PreparedStatement.executeQuery()</name>
    <aliases>
      <aliasGroup>
        <alias>MySQL: {0}</alias>
        <param name="cmdText"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/mysql/jdbc.PreparedStatement.executeUpdate()</name>
    <aliases>
      <aliasGroup>
        <alias>MySQL: {0}</alias>
        <param name="cmdText"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/mysql/jdbc.ConnectionImpl.rollback()</name>
    <aliases>
      <aliasGroup>
        <alias>MySQL: Rollback transaction to catalog '{0}'</alias>
        <param name="catalog"/>
      </aliasGroup>
    </aliases>
  </function>
  <function match="functionName">
    <name>com/mysql/jdbc.ConnectionImpl.commit()</name>
    <aliases>
      <aliasGroup>
        <alias>MySQL: Commit transaction to catalog '{0}'</alias>
        <param name="catalog"/>
      </aliasGroup>
    </aliases>
  </function>
  <!-- Java section END -->
  <hiddenRules>
    <!--hiddenRule regex="password" type="field" /-->
    <!--hiddenRule regex="(?&lt;=pwd=)[^;]*" replacement="*****" type="value" /-->
    <!-- regexCompare attribute determines regex that must be matched for key name of NameValuePair class-->
    <hiddenRule regex="((pwd|password)=?)[^;]*" regexCompare="((pwd|password)=?)[^;]*" replacement="$1*****" type="all" />
    <hiddenRule regex="((AccountKey)=?)[^;]*" regexCompare="((AccountKey)=?)[^;]*" replacement="$1*****" type="all" />
    <hiddenRule regex=".*sharedAccessKey.*" regexCompare=".*sharedAccessKey.*" replacement="********" type="field" />
    <hiddenRule regex=".*SharedAccessKey.*" regexCompare=".*sharedAccessKey.*" replacement="********" type="field" />
  </hiddenRules>

  <excludedEntries>
    <entry>
    </entry>
  </excludedEntries>
</functions>
